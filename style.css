/* style.css â€” timeless, minimalist, soft pastel aesthetic */

/* Reset */
* { box-sizing: border-box; margin:0; padding:0; }
html, body { height:100%; font-family:'Inter', sans-serif; color:#2b2b2b; background:#f7f4f2; overflow-x:hidden; }
img { max-width:100%; display:block; }

/* Background canvas */
#bg-canvas {
  position: fixed;
  top:0;
  left:0;
  width:100%;
  height:100%;
  z-index:-1;
}

/* Navigation */
nav {
  display:flex;
  justify-content:center;
  gap:16px;
  padding:16px 0;
  background: rgba(255,255,255,0.8);
  backdrop-filter: blur(6px);
  position: sticky;
  top:0;
  z-index: 10;
}
.nav-btn {
  padding:8px 16px;
  border-radius:20px;
  background: #fff;
  border:1px solid #dcd2cc;
  font-weight:500;
  color:#2b2b2b;
  text-decoration:none;
  transition: all 0.3s ease;
}
.nav-btn:hover {
  background:#f3e6e0;
  border-color:#e2cfc6;
}
.nav-active {
  background:#e6dcd3;
  border-color:#d6c7bd;
  font-weight:600;
}

/* Hero */
.hero {
  text-align:center;
  padding:80px 20px 40px;
}
.hero-title {
  font-family: 'Playfair Display', serif;
  font-size: clamp(32px, 6vw, 64px);
  font-weight:700;
  color:#3a3a3a;
}
.hero-sub {
  margin-top:12px;
  font-size:18px;
  color:#5a5a5a;
  font-weight:400;
}

/* About section */
.panel {
  padding:60px 20px;
  max-width:1100px;
  margin:0 auto;
}
.about-content {
  display:flex;
  gap:40px;
  align-items: stretch;
  flex-wrap:wrap;
  margin-top:24px;
}
.about-text {
  flex:1 1 400px;
  background: rgba(255,255,255,0.85);
  padding:28px;
  border-radius:14px;
  box-shadow: 0 4px 20px rgba(0,0,0,0.05);
  line-height:1.7;
}
.about-text h2 { font-family:'Playfair Display', serif; font-size:28px; margin-bottom:16px; color:#3a3a3a; }
.about-text p { margin-bottom:14px; color:#4b4b4b; }
.about-image {
  flex:0 0 350px;
  border-radius:14px;
  overflow:hidden;
  box-shadow: 0 4px 20px rgba(0,0,0,0.05);
}
.about-image img { width:100%; height:100%; object-fit:cover; }

/* Footer */
footer {
  text-align:center;
  padding:24px 16px;
  font-size:14px;
  color:#5a5a5a;
}

/* Reveal animations */
.reveal { opacity:0; transform: translateY(20px); transition: all 0.6s ease-out; }
.reveal.is-visible { opacity:1; transform:translateY(0); }


/* Preprint button style */
.preprint-btn {
  display:inline-block;
  background:#ff6b81;
  color:white;
  padding:6px 14px;
  border-radius:12px;
  text-decoration:none;
  font-weight:600;
  transition: all 0.3s ease;
}
.preprint-btn:hover {
  background:#ff4c65;
  transform: translateY(-2px);
}

/* Petals canvas stays the same for index page, will apply globally */
#bg-canvas {
  position: fixed;
  top:0;
  left:0;
  width:100%;
  height:100%;
  z-index:-1;
  pointer-events:none;
  background: linear-gradient(120deg, #fef6f4, #f0f9f7);
}

document.addEventListener('DOMContentLoaded', () => {

  // Scroll reveal
  const reveals = document.querySelectorAll('.reveal');
  const io = new IntersectionObserver((entries) => {
    entries.forEach(e => {
      if(e.isIntersecting){
        e.target.classList.add('is-visible');
        io.unobserve(e.target);
      }
    });
  }, {threshold:0.1});
  reveals.forEach(r=>io.observe(r));

  // Canvas for cherry blossom petals
  const canvas = document.getElementById('bg-canvas');
  const ctx = canvas.getContext('2d');
  let w = canvas.width = window.innerWidth;
  let h = canvas.height = window.innerHeight;

  class Petal {
    constructor(){
      this.reset();
    }
    reset(){
      this.x = Math.random()*w;
      this.y = Math.random()*h;
      this.size = 4 + Math.random()*4;
      this.speedX = (Math.random()-0.5)*0.3;
      this.speedY = 0.3 + Math.random()*0.6;
      this.angle = Math.random()*Math.PI*2;
      this.spin = (Math.random()-0.5)*0.02;
      this.color = `hsla(340, 70%, 85%, ${0.6 + Math.random()*0.3})`;
    }
    draw(){
      ctx.save();
      ctx.translate(this.x, this.y);
      ctx.rotate(this.angle);
      ctx.beginPath();
      ctx.moveTo(0, -this.size);
      ctx.bezierCurveTo(this.size/2, -this.size/2, this.size/2, this.size/2, 0, this.size);
      ctx.bezierCurveTo(-this.size/2, this.size/2, -this.size/2, -this.size/2, 0, -this.size);
      ctx.fillStyle=this.color;
      ctx.fill();
      ctx.restore();
    }
    update(){
      this.x += this.speedX;
      this.y += this.speedY;
      this.angle += this.spin;
      if(this.y>h+10||this.x>w+10) this.reset();
    }
  }

  const petals = [];
  for(let i=0;i<120;i++) petals.push(new Petal());

  window.addEventListener('resize',()=>{w=canvas.width=window.innerWidth; h=canvas.height=window.innerHeight;});

  function animate(){
    ctx.clearRect(0,0,w,h);
    petals.forEach(p=>{p.update(); p.draw();});
    requestAnimationFrame(animate);
  }
  animate();

});

